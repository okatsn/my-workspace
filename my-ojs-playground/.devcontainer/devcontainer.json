// .devcontainer/devcontainer.json
{
    "name": "MyOJSPlayground",
    "dockerComposeFile": [
        "docker-compose.yml"
    ],
    // The service in docker-compose.yml that VS Code should connect to
    "service": "devojs",
    "shutdownAction": "stopCompose",
    // The workspace folder inside the container
    // Must match the volume mount destination for your project and the WORKDIR in Dockerfile
    "workspaceFolder": "/app",
    // Specifies the user that VS Code and the terminal should run as in the container.
    // This should match the non-root user we set up in the Dockerfile.
    "remoteUser": "node",
    // Configure VS Code specific settings, extensions, etc.
    "customizations": {
        "vscode": {
            "settings": {
                // Settings for the Git Project Manager extension
                // Use the absolute path to your workspace folder inside the container
                "gitProjectManager.baseProjectsFolders": [
                    "/app"
                ],
                // General VS Code settings
                "files.eol": "\n",
                "editor.formatOnSave": true,
                // Add other settings here as needed
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.profiles.linux": {
                    "bash": {
                        "path": "/bin/bash"
                    }
                }
                // "dev.containers.cacheVolume": true
                // KEYNOTE: This setting is deprecated in newer versions of the VS Code Dev Containers feature.
            }
        }
    },
    // Forward the port that the Observable Framework development server runs on
    "forwardPorts": [
        3000
    ],
    // Commands to run after the container is created and the workspace is mounted.
    // Use this to install project dependencies.
    // Runs as the remoteUser ('node').
    "postCreateCommand": "pnpm install"
    // Uncomment to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "root" // Only uncomment if you have a strong reason to run as root
    // KEYNOTE: When you then run the container and mount your local project directory (.:/app) as a volume, this volume mount hides whatever was in /app from the image layer. This means the node_modules directory installed during the build time would be hidden by your mounted code, and the dependencies wouldn't be available to your project.
}