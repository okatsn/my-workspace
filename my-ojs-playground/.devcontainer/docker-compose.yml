# docker-compose.yml
# This file defines a service to build and run the Observable Framework tutorial container.

services:
  # Service name for this container setup
  devojs:
    # Build configuration
    build:
      # Context is the directory containing the Dockerfile and your project files.
      # Assuming the Dockerfile is in .devcontainer/ and this docker-compose.yml
      # is in the project root, the context is the project root.
      context: ..
      # Specify the path to the Dockerfile relative to the context.
      dockerfile: .devcontainer/Dockerfile

    # Assign a name to the resulting image
    image: observable-framework-image

    # Ensure init process runs for proper signal handling (good practice)
    init: true

    # Assign a specific container name (optional but helpful)
    container_name: my-ojs-playground

    # Map host port 3000 to container port 3000
    # This allows you to access the Observable Framework dev server from your host browser.
    ports:
      - "3000:3000"

    # Mount the current directory (your project root) into the container's /app directory.
    # This synchronizes your code between the host and the container.
    # Ensure permissions are handled correctly by running as the 'node' user in the Dockerfile.
    volumes:
      - .:/app
      # Optional: Mount your local Starship config if you want to override the one in the image
      # - ~/.config/starship.toml:/home/node/.config/starship.toml:ro
      # # The home directory is called "workspace"; try `cd ..` and `ls` to figure it out.
      # # Docker socket to access Docker server
      - /var/run/docker.sock:/var/run/docker.sock
      # # SSH directory
      - ~/.ssh:/home/jovyan/.ssh
      # For Windows without WSL, a copy will be made from /tmp/.ssh to ~/.ssh to fix permissions
      # - ~/.ssh:/tmp/.ssh:ro
      # # Git config
      - ~/.gitconfig:/home/jovyan/.gitconfig
      - vscode-server:/home/jovyan/.vscode-server
      # # DVC credential cache directory (this makes DVC credential persistant)
      - ~/.cache/pydrive2fs:/home/jovyan/.cache/pydrive2fs
    environment:
      - TZ=Etc/GMT-8 # Example: Set timezone

    # Keep the container running indefinitely after startup, waiting for user interaction.
    # This allows you to attach to the container and run commands like `pnpm dev`.
    entrypoint: sh -c "sleep infinity"

    
# KEYNOTE: Those defined volumes in service should be declared in the root level
# Unbind vscode-server to volumes to ensure extensions in devcontainer.json to be installed on rebuild
volumes:
  vscode-server: